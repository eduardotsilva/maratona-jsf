<?xml version='1.0' encoding='UTF-8' ?> 
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui">

    <h:head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
        <h:outputStylesheet name="./css/default.css"/>
        <h:outputStylesheet name="./css/cssLayout.css"/>
        <title>Facelets Template</title>
    </h:head>

    <h:body>
        <!-- Importando ENUM -->
        <p:importEnum type="model.enums.Turno" 
                      var="Turno" 
                      allSuffix="ALL_ENUM_VALUES" />  

        <h:outputLabel value="TESTE"/> <br/>
        <h:outputLabel value="#{estudanteRegistrarBean.estudante.nome}"/> <br/>
        <h:outputLabel value="#{Turno.MATUTINO}"/> <br/>


        <!-- Arrays --> 
        <h:outputLabel value="#{estudanteRegistrarBean.nomesArray[0]}
                       #{estudanteRegistrarBean.nomesArray[1]}
                       #{estudanteRegistrarBean.nomesArray[2]}
                       "/>    
        <!-- percorrendo array -->
        <br/> 
        <ui:repeat value="#{estudanteRegistrarBean.nomesArray}" var="itemNome">
            <h:outputLabel value="#{itemNome}"/> <br/> 
        </ui:repeat>

        <!-- List --> 
        <h:outputLabel value="#{estudanteRegistrarBean.nomeList.get(0)}
                       #{estudanteRegistrarBean.nomeList.get(1)}
                       #{estudanteRegistrarBean.nomeList.get(2)}
                       "/>    
        <!-- percorrendo List -->
        <br/> 
        <ui:repeat value="#{estudanteRegistrarBean.nomeList}" var="itemNome">
            <h:outputLabel value="#{itemNome}"/> <br/> 
        </ui:repeat>

        <!-- MAP -->
        <br/> 
        <!-- Pegando valor no Map através da chave 'Goky' case sensitive -->
        <h:outputLabel value="#{estudanteRegistrarBean.nomesMap.get('Goku')}"/> <br/> 

        <!-- imprimindo todos chaves e valor  "{Goku=O Mais Forte, Naruto=Mais chato, One Piece=Mais longo}" --> 
        <h:outputLabel value="#{estudanteRegistrarBean.nomesMap}"/> <br/> 

        <!-- percorrendo map -->
        <h:outputLabel value="#{estudanteRegistrarBean.nomesMap}"/> <br/> 

        <ui:repeat value="#{estudanteRegistrarBean.nomesMap.entrySet().toArray()}" var="entry" >
            <h:outputLabel value="#{entry.key} - #{entry.value}"/> <br/> 
        </ui:repeat>

        <!-- Executando metodo -->
        #{estudanteRegistrarBean.executar()}

        #{estudanteRegistrarBean.executar('Metodo com parametro')}

        #{estudanteRegistrarBean.executar(estudanteRegistrarBean.estudante.nome)}

        <h:form>
            <!-- commandoButton e commandLink precisa ser capsulado no form -->
            <!-- a propriedade action do commandbutton tem retorno, actionListener nao tem retorno -->
            <h:commandButton value="Executar" action="#{estudanteRegistrarBean.irParaIndex2()}"/>  <br/>

            <!-- executando funcao JavaScript JS  -->
            <h:commandButton value="Soltar Magia" onclick="fazMagica('haduken')" /> <br/>
            <h:commandButton value="Alert Nome" onclick="alertNome('#{estudanteRegistrarBean.estudante.nome}')" />


        </h:form>
        <br/>


        <!-- imprimindo CSS com Expression Language -->

        <ui:repeat value="#{estudanteRegistrarBean.nomeList}" var="nome" varStatus="indexVar">

            <h:outputLabel value="#{nome}" style="color: #{indexVar.index mod 2 ==0 ? 'red' : 'green'} "  /> <br/> 
        </ui:repeat>

        <!-- Requisição com AJAX  retorno só um pedaço de HTML /uma resposta parcial. sempre adicionar a TAG HEAD para o JSF adicionar o Script dele lá-->
        <!-- observe que existe a TAG render e rendered -->
        <br/>

        <h:form id="form">
            <h:outputText value="#{estudanteRegistrarBean.estudante.nome}"/> <br/>
            <h:outputText value="#{estudanteRegistrarBean.estudante.sobrenome}"/> <br/>
            <h:outputText value="#{estudanteRegistrarBean.estudante.turno}"/> <br/>
            <h:commandButton  value="Exibir Nota" >
                <f:ajax render="notasGrid" listener="#{estudanteRegistrarBean.exibirNotas()}"/>
            </h:commandButton><br/>

            <h:commandButton  value="Esconder Nota" >
                <f:ajax render="notasGrid" listener="#{estudanteRegistrarBean.esconderNotas()}"/>
            </h:commandButton><br/>

            <h:panelGrid id="notasGrid">
                <h:outputText value="#{estudanteRegistrarBean.estudante.nota1} " rendered="#{estudanteRegistrarBean.mostrarNota}"/> 
                <h:outputText value="#{estudanteRegistrarBean.estudante.nota2} " rendered="#{estudanteRegistrarBean.mostrarNota}"/>
                <h:outputText value="#{estudanteRegistrarBean.estudante.nota3} " rendered="#{estudanteRegistrarBean.mostrarNota}"/>
            </h:panelGrid> <br/>

            <!-- Técnica para vc fazer um mostrar esconde com HTML sem a TAG render -->

            <h:commandButton  value="Exibir Link" >
                <f:ajax render="pdLink" listener="#{estudanteRegistrarBean.exibirLink()}"/>
            </h:commandButton><br/>

            <h:commandButton  value="Esconder Link" >
                <f:ajax render="pdLink" listener="#{estudanteRegistrarBean.esconderLink()}"/>
            </h:commandButton><br/>
            <!-- encapsulando no PanelGroup pra poder renderizar com ajax -->
            <h:panelGroup id="pdLink">
                <ui:fragment id="framentLink" rendered="#{estudanteRegistrarBean.mostrarLink}">
                    <a href="http://www.google.com.br" target="_blank">www.google.com.br</a>
                </ui:fragment>
            </h:panelGroup>

        </h:form>
        
        <!-- Lambdas Expression Language -->
        #{(soma -> soma + num)(10)} <br/>
        
        
        
    </h:body>

    <script type="text/javascript">
        
        function fazMagica(magica) {
            alert(magica);
        }
        
        function alertNome(nome) {
            alert(nome);
        }
    </script>
</html>
